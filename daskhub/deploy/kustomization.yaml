# See:
#  https://kubectl.docs.kubernetes.io/references/kustomize/
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# There must be agreement w/ the input resource name
# and the file produces within the post-renderer script
# (kustomize-post-renderer-hook.sh).
resources:
- all.yaml

patches:
  - path: patch-jupyterhub-autohttps-startup-delay.yaml
    target:
      kind: Deployment
      name: autohttps
  - path: patch-jupyterhub-user-scheduler-clusterRole.yaml
    target:
      kind: ClusterRole
      name: daskhub-user-scheduler
  - target:
      kind: Deployment
      name: autohttps
    patch: |
      - op: add
        path: /spec/template/spec/containers/0/livenessProbe
        value:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
            exec:
              command: ["grep", "main", "/etc/acme/acme.json"]
  # Added when upgrading to kube-scheduler 1.26
  #  1.) This version only supports apiVersion v1beta3 or v1.  This configuration
  #      is defined in the ConfigMap.  There were a few additional changes within
  #      this resource as well.  The values included here are the current daskhub
  #      version 2024.1.1.
  #  2.) The health check endpoints have also changed.
  #
  # Updated when upgrading to kube-scheduler 1.27
  #  1.) This version only supports apiVersion v1.
  #  2.) Name of the leaderElection.resourceLock has changed from endpointleases
  #      to leases.
  - path: patch-jupyterhub-user-scheduler-configMap-apiVersion-v1.yaml
    target:
      kind: ConfigMap
      name: user-scheduler
  - target:
      kind: Deployment
      name: user-scheduler
    patch: |
      - op: add
        path: /spec/template/spec/containers/0/livenessProbe/httpGet
        value:
              path: /healthz
              scheme: HTTPS
              port: 10259
      - op: add
        path: /spec/template/spec/containers/0/readinessProbe/httpGet
        value:
              path: /healthz
              scheme: HTTPS
              port: 10259
