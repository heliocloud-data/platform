#!/bin/bash

AWS_REGION=$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')

KUBERNETES_NAMESPACE={{ config['daskhub']['namespace'] }}
ROUTE53_HOSTED_ZONE={{ config['daskhub']['domain_url'] }}

cd daskhub
helm dep update
helm upgrade \
    daskhub ./ \
    --namespace ${KUBERNETES_NAMESPACE} \
    --values=values.yaml \
    --values=values-production.yaml \
    --post-renderer=./kustomize-post-renderer-hook.sh \
    --install --timeout 30m30s --debug


LOADBALANCER_URL=$(kubectl --namespace=$KUBERNETES_NAMESPACE get svc proxy-public --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')

echo ------------------------------
echo Ping for loadbalancer address, wait until loaded...
iterator=0
while [[ $LOADBALANCER_URL != *.com ]]
do
    if [[ $iterator -gt 60 ]]; then
      echo Breaking due to exceeding time, check if issue with Daskhub helm deployment
      break
    fi
    sleep 20s
    LOADBALANCER_URL=$(kubectl --namespace=$KUBERNETES_NAMESPACE get svc proxy-public --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')
    echo $LOADBALANCER_URL
    iterator=$((iterator + 1))
    echo $iterator
done


FINAL_LOADBALANCER_URL=$(kubectl --namespace=$KUBERNETES_NAMESPACE get svc proxy-public --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')


if [[ $LOADBALANCER_URL != $FINAL_LOADBALANCER_URL ]]; then
    echo These following values should match, othwerwise there is a problem
    echo $LOADBALANCER_URL
    echo $FINAL_LOADBALANCER_URL
    echo Exit, something wrong has occurred, may be a timing issue and should retry script
    exit 1
else
    # Copy and alter Route 53 record file
    echo ------------------------------
    echo Creating Route53 record...
    cp route53_record.json.template route53_record.json
    sed -i "s|<INSERT_LOADBALANCER_URL>|$LOADBALANCER_URL|g" route53_record.json

    # Send an upsert to add/update subdomain DNS link to Route 53
    echo ------------------------------
    echo Upserting Route53 record...
    ROUTE53_HOSTED_ZONE_ID=$(aws route53 list-hosted-zones-by-name | jq --arg name "$ROUTE53_HOSTED_ZONE." -r '.HostedZones | .[] | select(.Name=="\($name)") | .Id')
    aws route53 change-resource-record-sets --hosted-zone-id $ROUTE53_HOSTED_ZONE_ID --change-batch file://route53_record.json

    echo ------------------------------
    echo Complete! --- may take a few minutes to propoagate
fi